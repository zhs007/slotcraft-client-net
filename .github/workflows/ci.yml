name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm

      - name: Install dependencies
        run: npm ci

      - name: Typecheck
        run: npm run typecheck

      - name: Lint
        run: npm run lint

      - name: Build (TypeScript)
        run: npm run build

      - name: Test (Vitest) with coverage
        run: npm test

      - name: Upload coverage artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-${{ matrix.node-version }}
          path: coverage

      - name: Append coverage summary (Vitest)
        if: always()
        run: |
          if [ -f coverage/lcov.info ]; then
            PCT=$(awk -F: '/^LF:/ {lf+=$2} /^LH:/ {lh+=$2} END { if (lf>0) printf("%.2f", (lh/lf)*100); else print "0" }' coverage/lcov.info)
            echo "Coverage (Lines): ${PCT}%" >> "$GITHUB_STEP_SUMMARY"
          elif [ -f coverage/index.html ]; then
            # Fallback: try to scrape HTML if lcov is missing
            LINES=$(grep -oE ">[0-9]+%<" coverage/index.html | head -n1 | tr -d '<>%' || echo "?")
            echo "Coverage (Lines): ${LINES}%" >> "$GITHUB_STEP_SUMMARY"
          else
            echo "Coverage report not found" >> "$GITHUB_STEP_SUMMARY"
          fi

      - name: Comment coverage on PR (Vitest)
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let msg = 'Vitest coverage artifact uploaded.';
            try {
              const lcov = fs.readFileSync('coverage/lcov.info', 'utf8');
              const lf = [...lcov.matchAll(/^LF:(\d+)/gm)].reduce((a, m) => a + Number(m[1]), 0);
              const lh = [...lcov.matchAll(/^LH:(\d+)/gm)].reduce((a, m) => a + Number(m[1]), 0);
              if (lf > 0) msg = `Vitest Coverage (Lines): ${(lh * 100 / lf).toFixed(2)}%`;
            } catch (e) {}
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: msg,
            });
